//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCapplication
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVCmainEntities : DbContext
    {
        public MVCmainEntities()
            : base("name=MVCmainEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<registration_tb> registration_tb { get; set; }
        public virtual DbSet<District_tb> District_tb { get; set; }
        public virtual DbSet<State_tb> State_tb { get; set; }
        public virtual DbSet<Inserttab> Inserttabs { get; set; }
    
        public virtual int sp_reg_insert(string na, Nullable<int> ag, string addr, string em, string ph, string gen, string state, string qual, string una, string pw)
        {
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var emParameter = em != null ?
                new ObjectParameter("em", em) :
                new ObjectParameter("em", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_reg_insert", naParameter, agParameter, addrParameter, emParameter, phParameter, genParameter, stateParameter, qualParameter, unaParameter, pwParameter);
        }
    
        public virtual int sp_insert(string na, Nullable<int> ag, string addr, string em, string ph, string gen, string sta, string qual, string una, string psw)
        {
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            var emParameter = em != null ?
                new ObjectParameter("em", em) :
                new ObjectParameter("em", typeof(string));
    
            var phParameter = ph != null ?
                new ObjectParameter("ph", ph) :
                new ObjectParameter("ph", typeof(string));
    
            var genParameter = gen != null ?
                new ObjectParameter("gen", gen) :
                new ObjectParameter("gen", typeof(string));
    
            var staParameter = sta != null ?
                new ObjectParameter("sta", sta) :
                new ObjectParameter("sta", typeof(string));
    
            var qualParameter = qual != null ?
                new ObjectParameter("qual", qual) :
                new ObjectParameter("qual", typeof(string));
    
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pswParameter = psw != null ?
                new ObjectParameter("psw", psw) :
                new ObjectParameter("psw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_insert", naParameter, agParameter, addrParameter, emParameter, phParameter, genParameter, staParameter, qualParameter, unaParameter, pswParameter);
        }
    
        public virtual int sp_login(string una, string pwd, ObjectParameter status)
        {
            var unaParameter = una != null ?
                new ObjectParameter("una", una) :
                new ObjectParameter("una", typeof(string));
    
            var pwdParameter = pwd != null ?
                new ObjectParameter("pwd", pwd) :
                new ObjectParameter("pwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_login", unaParameter, pwdParameter, status);
        }
    
        public virtual ObjectResult<sp_profile_Result> sp_profile(string uname)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_profile_Result>("sp_profile", unameParameter);
        }
    
        public virtual int sp_profile_Update(string uname, Nullable<int> ag, string addr)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            var addrParameter = addr != null ?
                new ObjectParameter("addr", addr) :
                new ObjectParameter("addr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_profile_Update", unameParameter, agParameter, addrParameter);
        }
    
        public virtual int sp_Pwdchange(string uname, string oldpwd, string newpwd)
        {
            var unameParameter = uname != null ?
                new ObjectParameter("uname", uname) :
                new ObjectParameter("uname", typeof(string));
    
            var oldpwdParameter = oldpwd != null ?
                new ObjectParameter("oldpwd", oldpwd) :
                new ObjectParameter("oldpwd", typeof(string));
    
            var newpwdParameter = newpwd != null ?
                new ObjectParameter("newpwd", newpwd) :
                new ObjectParameter("newpwd", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Pwdchange", unameParameter, oldpwdParameter, newpwdParameter);
        }
    
        public virtual ObjectResult<sp_districts_Result> sp_districts(Nullable<int> stid)
        {
            var stidParameter = stid.HasValue ?
                new ObjectParameter("stid", stid) :
                new ObjectParameter("stid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_districts_Result>("sp_districts", stidParameter);
        }
    
        public virtual ObjectResult<sp_SelectAll_Result> sp_SelectAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_SelectAll_Result>("sp_SelectAll");
        }
    
        public virtual ObjectResult<sp_state_Result> sp_state()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_state_Result>("sp_state");
        }
    
        public virtual int sp_inserttab(Nullable<int> sid, Nullable<int> did, string na, Nullable<int> ag)
        {
            var sidParameter = sid.HasValue ?
                new ObjectParameter("Sid", sid) :
                new ObjectParameter("Sid", typeof(int));
    
            var didParameter = did.HasValue ?
                new ObjectParameter("Did", did) :
                new ObjectParameter("Did", typeof(int));
    
            var naParameter = na != null ?
                new ObjectParameter("na", na) :
                new ObjectParameter("na", typeof(string));
    
            var agParameter = ag.HasValue ?
                new ObjectParameter("ag", ag) :
                new ObjectParameter("ag", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_inserttab", sidParameter, didParameter, naParameter, agParameter);
        }
    }
}
